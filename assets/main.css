:root {
  --text: #333;
  --highlight: mediumpurple;
  --highlightDark: darkslateblue;
  --outline: plum;
  --error: tomato;
  --outlineError: pink;
  --success: limegreen;
  --outlineSuccess: palegreen;
}
body {
  font: 1.25rem/1.5 'Manrope';
  color: var(--text);
  background-color: lavender;
  background-image: url('/img/background.svg');
}
input,
select,
button {
  font: inherit;
  color: inherit;
  letter-spacing: inherit;
}
input[type="radio"],
input[type="checkbox"] {
  position: relative;
  appearance: none;
  inline-size: 1em;
  block-size: 1em;
  margin: 0;
  border: .125rem solid;
  border-radius: .125em;
  vertical-align: middle;
  color: inherit;
  transition: box-shadow 0.2s ease;
}
input[type='radio'] {
  border-radius: 50%;
}
input[type="checkbox"]:checked,
input[type="radio"]:checked {
  box-shadow: inset 0 0 0 .25em var(--highlight);
}
fieldset {
  margin: 0;
  border: .125rem solid;
  border-radius: .25rem;
}
button {
  border-radius: .25rem;
  color: white;
  background-color: var(--highlightDark);
}
:focus-visible {
  outline: 3px solid var(--outline);
  outline-offset: 1px;
}
@media (prefers-reduced-motion: reduce) {
  *,
  *::before,
  *::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}

/* UTILS */
.visually-hidden {
  border: 0;
  clip: rect(0 0 0 0);
  height: auto;
  margin: 0;
  overflow: hidden;
  padding: 0;
  position: absolute !important;
  width: 1px;
  white-space: nowrap;
}
.icon {
  display: inline-block;
  inline-size: 1em;
  block-size: 1em;
  stroke-width: 0;
  stroke: currentColor;
  fill: currentColor;
}
.flex {
  display: flex;
}
.justify-between {
  justify-content: space-between;
}
.mbe-8 {
  margin-block-end: .5rem;
}

/* CUSTOM CONTROLS */
.control:has(:where(input[type="radio"], input[type="checkbox"])) {
  display: flex;
  align-items: center;
  gap: .25rem;
}
.control__input {
  display: flex;
  gap: .125rem;
  border: .125rem solid;
  border-radius: .25rem;
  padding: .25rem;
}
.control__input :where(input, select, textarea) {
  flex-grow: 1;
  border: 0;
  padding: 0;
  background-color: transparent;
  outline: 0;
}
.control__input:has(:focus-visible),
.control :where([type="radio"], [type="checkbox"]):focus-visible,
.card:has(:focus-visible),
.card:has(:focus-visible),
.card:has(:focus-visible) {
  outline: 3px solid var(--outline);
  outline-offset: 1px;
}
.control__input :where(.icon-check, .icon-cancel) {
  display: none;
}
.js .control:has([data-validateme]:invalid),
.no-js .control:has(:focus-visible:invalid) {
  color: var(--error);
}
.js .control:has([data-validateme]:invalid) .control__input,
.no-js .control:has(:focus-visible:invalid) .control__input {
  outline-color: var(--outlineError);
}
/* Controls that do not include radio or checkbox, and that also have valid inputs currently focused */
.control:has(:where(:not([type="radio"], [type="checkbox"])):focus-visible:valid) {
  color: var(--success);
}
.control:has(:where(:not([type="radio"], [type="checkbox"])):focus-visible:valid) .control__input {
  outline-color: var(--outlineSuccess);
}
:where(
  .js .control:has([data-validateme]:invalid), 
  .no-js .control:has(:focus-visible:invalid)
) .icon-cancel,
.control:has(:focus-visible:valid) .icon-check {
  display: unset
}

/**
 * SWITCH
 */
input[type="checkbox"].switch {
  appearance: none;
  display: inline-flex;
  align-items: center;
  width: 2.5em;
  height: 1.3em;
  border-radius: 10000px;
  padding: .125em;
  box-shadow: none;
}
input[type="checkbox"].switch:before {
  content: '';
  width: .9em;
  height: .9em;
  border: 1px solid;
  border-radius: 10000px;
  transition: transform 0.3s ease, background 0.3s ease;
}
input[type="checkbox"].switch:checked:before {
  background-color: var(--highlight);
  transform: translateX(1em);
}

/** CARDS */
.cards {
  display: grid;
  gap: .5rem;
  grid-template-columns: repeat(3, 1fr);
}
.card {
  position: relative;
  border: .125rem solid;
  border-radius: .5rem;
  padding: 1rem;
  background: #fff;
  transition: box-shadow 0.2s ease;
}
.card :first-child {
  margin-block-start: 0;
}
.card :last-child {
  margin-block-end: 0;
}
.card :where(svg, label) {
  display: block;
  margin: auto;
}
.card label {
  text-align: center;
}
.card label:after {
  content: '';
  position: absolute;
  inset: 0;
}
.card a {
  position: relative;
}
.card img {
  display: block;
  margin-left: auto;
  margin-right: auto;
}
.card:has(input:checked) {
  box-shadow: inset 0 0 0 .25em var(--highlight);
}

/**
 * POKEMON
 */
.pokemon {
  display: none;
}
.pokemon img {
  display: block;
  margin: auto;
}
form:has(#bulbasaur:checked) .pokemon--bulbasaur,
form:has(#charmander:checked) .pokemon--charmander,
form:has(#squirtle:checked) .pokemon--squirtle {
  display: block;
}

/**
 * VALIDATION
 */
form:has(:invalid) :where(button:not([type]), button[type="submit"]) {
  opacity: 0.7;
  color: var(--text);
  background: whitesmoke;
  cursor: not-allowed;
}
